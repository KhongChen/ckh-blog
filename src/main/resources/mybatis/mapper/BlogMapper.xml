<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ckh.blog.mapper.BlogMapper">
    <!--useGeneratedKeys：必须设置为true，否则无法获取到主键id。
		keyProperty：设置为blog对象的主键id属性名称。
		keyColumn：设置为数据库记录的主键id字段名称
		新添加主键id并不是在执行添加操作时直接返回的，
		而是在执行添加操作之后将新添加记录的主键id字段设置为POJO对象的主键id属性
	-->
    <!--插入博客-->
    <insert id="saveBlog" parameterType="blog" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into t_blog (title, content, first_picture, flag,
        views, appreciation, share_statement, commentabled, published,
        recommend, create_time, update_time, type_id, user_id, description)
        values (#{title},#{content},#{firstPicture},#{flag},#{views},#{appreciation},
        #{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},
        #{updateTime},#{type.id},#{user.id},#{description});
    </insert>
    <!--中间表t_blog_tag-->
    <insert id="saveBlogTag" parameterType="map">
        insert into t_blog_tags(blog_id,tag_id) values
        <foreach collection="tagIds" item="tag_id" separator=",">
            (#{blog_id}, #{tag_id})
        </foreach>
    </insert>
    <!--首页博客展示-->
    <select id="getIndexBlog" resultMap="indexBlog" resultType="com.ckh.blog.vo.IndexBlog">
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
        t.id typeId,t.name typeName,
        u.nickname, u.avatar
        from t_blog b, t_user u, t_type t
        where b.user_id = u.id and b.type_id = t.id
    </select>
    <!--获得某一分类下所有博客-->
    <select id="getBlogByType" parameterType="java.lang.Long" resultMap="indexBlog">
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
        t.id typeId,t.name typeName,
        u.nickname, u.avatar
        from t_blog b, t_user u, t_type t
        where b.user_id = u.id and b.type_id = t.id and b.type_id = #{typeId}
    </select>
    <!--获得某一标签下所有博客-->
    <select id="getBlogByTag" parameterType="java.lang.Long" resultMap="indexBlog">
        select b.id,b.title,b.first_picture,b.views,b.update_time,b.description,
        t.id typeId,t.name typeName,
        u.nickname,u.avatar
        from t_blog b,t_type t,t_user u,t_blog_tags bt,t_tag tag
        where b.type_id = t.id and b.user_id = u.id and b.id = bt.blog_id
        and  bt.tag_id = tag.id and bt.tag_id = #{id}
    </select>
    <!--搜索博客-->
    <select id="getBlogByKeyWord" parameterType="string" resultMap="indexBlog">
        <bind name="pattern" value="'%' + keyword + '%'" />
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
        t.id typeId,t.name typeName,
        u.nickname, u.avatar
        from t_blog b, t_user u, t_type t
        where b.user_id = u.id and b.type_id = t.id
        <if test="keyword != null and keyword != ''">
            and (b.title like #{pattern} or b.description like #{pattern})
        </if>
        order by b.update_time desc
    </select>
    <!--子查询-->
    <select id="getTagById" resultType="tag">
        select t.id, t.name from t_tag t,t_blog_tags bt where bt.tag_id = t.id and bt.blog_id = #{id}
    </select>
    <!--查询文章管理列表-->
    <select id="getBlogList" resultMap="blogQuery">
        select b.id,b.title,b.recommend,b.published,b.update_time,t.id,t.name from t_blog b, t_user u, t_type t
        where b.user_id = u.id and b.type_id = t.id
    </select>
    <!--根据条件获得博客-->
    <select id="getBlogByCondition" parameterType="com.ckh.blog.vo.BlogQuery" resultMap="blogQuery">
        <bind name="pattern" value="'%' + title + '%'"/>
        select b.id,b.title,b.recommend,b.published, b.update_time,t.id,t.name from t_blog b, t_user u, t_type t
        where b.user_id = u.id and b.type_id = t.id
        <if test="title=!null">
            and b.title like #{pattern}
        </if>
        <if test="typeId!=-1">
            and b.type_id = #{typeId}
        </if>
        <if test="recommend">
            and b.recommend = 1
        </if>
        <if test="!recommend">
            and b.recommend = 0
        </if>
    </select>
    <!--统计博客信息-->
    <select id="getBlogTotal" resultType="Integer">
        select count(*) from t_blog
    </select>
    <!--查询编辑博客-->
    <select id="getBlogById" parameterType="java.lang.Long" resultMap="blogMap">
        select b.id,b.title,b.content,b.first_picture,b.flag,b.views,
        b.appreciation,b.share_statement,b.commentabled,b.published,b.recommend,b.create_time,
        b.update_time,b.type_id,b.description,bt.tag_id
        from t_blog b, t_user u, t_type t,t_blog_tags bt
        where b.user_id = u.id and b.type_id = t.id and b.id= bt.blog_id and b.id = #{id}
    </select>
    <!--查询博客详情-->
    <select id="getDetailBlog" parameterType="java.lang.Long" resultMap="detailBlog">
       select b.id,b.title,b.content,b.first_picture,b.flag,b.views,b.content,
        b.create_time,b.update_time,b.type_id,
        t.name typeName,b.commentabled,b.share_statement,b.appreciation,
        u.nickname,u.avatar,
        tag.id tag_id,tag.name tagName
        from t_blog b, t_user u, t_type t, t_tag tag, t_blog_tags bt
        where b.user_id = u.id and b.type_id = t.id and b.id= bt.blog_id and bt.tag_id = tag.id and b.id = #{id}
    </select>
    <!--获得最新推荐博客-->
    <select id="getBlogByRecommend" resultMap="recommendBlog">
        select b.id,b.title,b.recommend from t_blog b where b.recommend = 1 order by update_time desc limit 5;
    </select>
    <!--获得博客所有年份-->
    <select id="findGroupYear" resultType="string">
        select date_format(b.update_time, '%Y') as year from t_blog b group by year desc;
    </select>
    <!--根据时间获得博客-->
    <select id="getBlogByTime" parameterType="string" resultMap="archiveBlog">
        select b.id,b.title,b.flag,b.update_time from t_blog b where date_format(b.update_time,'%Y') = #{year} order by update_time asc
    </select>
    <delete id="deleteBlog" parameterType="java.lang.Long">
        delete from t_blog where id = #{id};
    </delete>

    <!--修改博客-->
    <update id="updateBlog" parameterType="blog" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        update t_blog b
        set b.title = #{title},b.content = #{content},
        b.first_picture = #{firstPicture},b.flag = #{flag},
        b.appreciation = #{appreciation},b.share_statement = #{shareStatement},
        b.commentabled = #{commentabled},b.published = #{published},b.recommend = #{recommend},
        b.update_time = #{updateTime}, b.description = #{description}, b.type_id = #{type.id} where b.id = #{id}
    </update>
    <!--更新浏览次数-->
    <update id="updateViews" parameterType="java.lang.Long">
        update t_blog set views = views+1 where id = #{id}
    </update>
    <!--更新中间表-->
    <delete id="deleteBlogTag" parameterType="map">
        delete from t_blog_tags where blog_id = #{blog_id}
    </delete>
    <!--结果映射-->
    <!--后台博客展示vo类-->
    <resultMap id="blogQuery" type="com.ckh.blog.vo.BlogQuery">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="updateTime" column="update_time"/>
        <association property="type" javaType="type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>
    <!--首页博客展示vo类-->
    <resultMap id="indexBlog" type="com.ckh.blog.vo.IndexBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>
        <result property="typeId" column="typeId"/>
        <result property="typeName" column="typeName"/>
        <result property="nickName" column="nickname"/>
        <result property="avatar" column="avatar"/>
        <!--column是一对多的外键，即主键的列名-->
        <collection property="tagList" ofType="tag" column="id" select="getTagById"/>
    </resultMap>
    <!--编辑页面博客vo类-->
    <resultMap id="blogMap" type="blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="appreciation" column="appreciation"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="commentabled" column="commentabled"/>
        <result property="published" column="published"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>
        <association property="type" javaType="type">
            <result property="id" column="type_id"/>
            <result property="name" column="name"/>
        </association>
        <collection property="tags" ofType="tag">
            <result property="id" column="tag_id"/>
            <result property="name" column="name"/>
        </collection>
    </resultMap>
    <!--首页最新博客vo类-->
    <resultMap id="recommendBlog" type="com.ckh.blog.vo.RecommendBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="recommend" column="recommend"/>
    </resultMap>
    <!--博客详情vo类-->
    <resultMap id="detailBlog" type="com.ckh.blog.vo.DetailBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="content" column="content"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="commentabled" column="commentabled"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="typeId" column="type_id"/>
        <result property="typeName" column="typeName"/>
        <result property="nickName" column="nickname"/>
        <result property="avatar" column="avatar"/>
        <collection property="tagList" ofType="tag">
            <result property="id" column="tag_id"/>
            <result property="name" column="tagName"/>
        </collection>
    </resultMap>
    <!--归档博客vo类-->
    <resultMap id="archiveBlog" type="com.ckh.blog.vo.ArchiveBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="flag" column="flag"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
</mapper>